///////////////////////////////////////////////////////////////////////////////
//
// Build Script for building JavaPOS Configuration Loader (JCL) Library
//
// Author: denis.kuniss@dieboldnixdorf.com (2021)
//
///////////////////////////////////////////////////////////////////////////////

plugins {
	id 'java-library'
	id 'signing'
	id 'eclipse'
	id 'maven-publish'
	id("io.github.gradle-nexus.publish-plugin") version "1.1.0"
}

ext.githubProjectUrl = 'https://github.com/JavaPOSWorkingGroup/javapos-config-loader'

wrapper {
	gradleVersion = '7.1.1'
}


///////////////////////////////////////////////////////////////////////////////
// Names and Versions
///////////////////////////////////////////////////////////////////////////////

def artifactName = 'javapos-config-loader'
group='org.javapos'
version='3.0.0-SNAPSHOT'


///////////////////////////////////////////////////////////////////////////////
// Build Dependencies
///////////////////////////////////////////////////////////////////////////////

repositories {
	mavenCentral()
	if (project.plugins.hasPlugin('maven')) 
	{ // evaluates only at development environment, not at travis-ci.org
	    maven {
	        url "file:$localTestFileRepositoryDir"
	        // localTestFileRepositoryDir must be defined in gradle.properties
	    }
	}
}

def testResourceDir = file("${System.properties['java.io.tmpdir']}/javapos-config-loader-test/resources")

dependencies {
	api 'xerces:xerces:1.2.3'
	api 'org.javapos:javapos-contracts:1.6.0'
	
	testImplementation 'junit:junit:3.8.+'
	
	testRuntimeOnly files(testResourceDir)
}

///////////////////////////////////////////////////////////////////////////////
// Project Configurations
///////////////////////////////////////////////////////////////////////////////

sourceCompatibility = 8

def javaposManifest = 	manifest {
        attributes('Specification-Title': 'UnifiedPOS Standard',
				   'Specification-Vendor': 'UnifiedPOS Committee',
                   'Implementation-Title': 'JavaPOS Configuration Loader',
				   'Implementation-Vendor': 'github.com/JavaPOSWorkingGroup',
                   'Implementation-Version': version,
                   'Main-Class': 'jpos.config.Version')
}

///////////////////////////////////////////////////////////////////////////////
// Build Tasks
///////////////////////////////////////////////////////////////////////////////

java {
    withSourcesJar()
    withJavadocJar()
}

jar {
	baseName = artifactName
	manifest = javaposManifest
	from ('CHANGELOG.md') {
		into 'META-INF'
	}
}

sourcesJar {
	manifest = javaposManifest
}


///////////////////////////////////////////////////////////////////////////////
// Test Tasks
///////////////////////////////////////////////////////////////////////////////


task prepareTestConfiguration {
    description = 'copies the initial jpos.properties file to the resource directory where generated jpos.properties files are written to'
    doLast {
		testResourceDir.mkdirs()
		copy {
			from ("$projectDir/src/test/resources/") {
				include "jpos/res/jpos_junit.properties"
			}
			into testResourceDir
			rename 'jpos_junit.properties', 'jpos.properties'
		}
	}
}

test.dependsOn prepareTestConfiguration

// Note: prepareTestConfiguration is needed to be called too before JUnit tests are started in Eclipse


///////////////////////////////////////////////////////////////////////////////
// Artifact Upload
///////////////////////////////////////////////////////////////////////////////

nexusPublishing {
    repositories {
        sonatype()
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
			pom {
				name = artifactName
				description = 'JavaPOS Configuration Loader Library'
				url = 'https://github.com/JavaPOSWorkingGroup/javapos-config-loader'
				licenses {
					license {
						name = 'Common Public License (CPL) -- V1.0'
						url = 'https://www.eclipse.org/legal/cpl-v10.html'
					}
				}
				developers {
					developer {
						id = 'javapos'
						name = 'JavaPOS Working Group'
						email = 'builder@javapos.org'
					}
				}
				scm {
					connection = 'scm:git:https://github.com/JavaPOSWorkingGroup/javapos-config-loader.git'
					developerConnection = 'scm:git:https://github.com/JavaPOSWorkingGroup/javapos-config-loader.git'
					url = 'https://github.com/JavaPOSWorkingGroup/javapos-config-loader.git'
				}
			}
		}
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
	sign publishing.publications.mavenJava
}
